// Generated from /home/ozzy/Escritorio/clean-proyect/grammar/CommonLexerRules.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CommonLexerRules extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FIN=1, PLUS=2, MINUS=3, TIMES=4, DIV=5, EQUALS=6, GATO=7, DOLLAR=8, DOBLEPUNTO=9, 
		ANDPERSON=10, COMMA=11, LPAREN=12, RPAREN=13, LBRACE=14, RBRACE=15, IGUAL=16, 
		DISTINTO=17, MAYOR=18, MENOR=19, MAYORIGUAL=20, MENORIGUAL=21, AND=22, 
		OR=23, NOT=24, PRINT=25, IF=26, ELSE=27, ELSEIF=28, WHILE=29, NUM=30, 
		VUL=31, V=32, ID=33, NUMBER=34, STRING=35, CHAR=36, WS=37, SALTO=38, TRUE=39, 
		FALSE=40, DIGIT=41, RESI=42;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"FIN", "PLUS", "MINUS", "TIMES", "DIV", "EQUALS", "GATO", "DOLLAR", "DOBLEPUNTO", 
			"ANDPERSON", "COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "IGUAL", 
			"DISTINTO", "MAYOR", "MENOR", "MAYORIGUAL", "MENORIGUAL", "AND", "OR", 
			"NOT", "PRINT", "IF", "ELSE", "ELSEIF", "WHILE", "NUM", "VUL", "V", "ID", 
			"NUMBER", "STRING", "CHAR", "WS", "SALTO", "TRUE", "FALSE", "DIGIT", 
			"RESI"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'+'", "'-'", "'*'", "'/'", "'='", "'#'", "'$'", "':'", 
			"'&'", "','", "'('", "')'", "'{'", "'}'", "'=='", "'!='", "'>'", "'<'", 
			"'>='", "'<='", "'&&'", "'||'", "'!'", "'printPlease'", "'if'", "'else'", 
			"'elseif'", "'mien'", "'num'", "'vul'", "'v'", null, null, null, null, 
			null, "'\\n'", "'true'", "'false'", null, "'%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "FIN", "PLUS", "MINUS", "TIMES", "DIV", "EQUALS", "GATO", "DOLLAR", 
			"DOBLEPUNTO", "ANDPERSON", "COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
			"IGUAL", "DISTINTO", "MAYOR", "MENOR", "MAYORIGUAL", "MENORIGUAL", "AND", 
			"OR", "NOT", "PRINT", "IF", "ELSE", "ELSEIF", "WHILE", "NUM", "VUL", 
			"V", "ID", "NUMBER", "STRING", "CHAR", "WS", "SALTO", "TRUE", "FALSE", 
			"DIGIT", "RESI"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CommonLexerRules(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CommonLexerRules.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000*\u00f1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f"+
		"\u0001\u001f\u0001 \u0001 \u0005 \u00b8\b \n \f \u00bb\t \u0001!\u0003"+
		"!\u00be\b!\u0001!\u0004!\u00c1\b!\u000b!\f!\u00c2\u0001!\u0001!\u0004"+
		"!\u00c7\b!\u000b!\f!\u00c8\u0003!\u00cb\b!\u0001\"\u0001\"\u0005\"\u00cf"+
		"\b\"\n\"\f\"\u00d2\t\"\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001#\u0001"+
		"$\u0004$\u00db\b$\u000b$\f$\u00dc\u0001$\u0001$\u0001%\u0001%\u0001&\u0001"+
		"&\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0001\'\u0001\'\u0001\'\u0001\'"+
		"\u0001(\u0001(\u0001)\u0001)\u0001\u00d0\u0000*\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O(Q)S*\u0001\u0000\u0004"+
		"\u0003\u0000AZ^^az\u0003\u000009AZaz\u0003\u0000\t\n\r\r  \u0001\u0000"+
		"09\u00f7\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000"+
		"\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001"+
		"\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000"+
		"\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000"+
		"\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003"+
		"\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000"+
		"\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000"+
		"\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A"+
		"\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000"+
		"\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000"+
		"\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O"+
		"\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000"+
		"\u0000\u0000\u0001U\u0001\u0000\u0000\u0000\u0003W\u0001\u0000\u0000\u0000"+
		"\u0005Y\u0001\u0000\u0000\u0000\u0007[\u0001\u0000\u0000\u0000\t]\u0001"+
		"\u0000\u0000\u0000\u000b_\u0001\u0000\u0000\u0000\ra\u0001\u0000\u0000"+
		"\u0000\u000fc\u0001\u0000\u0000\u0000\u0011e\u0001\u0000\u0000\u0000\u0013"+
		"g\u0001\u0000\u0000\u0000\u0015i\u0001\u0000\u0000\u0000\u0017k\u0001"+
		"\u0000\u0000\u0000\u0019m\u0001\u0000\u0000\u0000\u001bo\u0001\u0000\u0000"+
		"\u0000\u001dq\u0001\u0000\u0000\u0000\u001fs\u0001\u0000\u0000\u0000!"+
		"v\u0001\u0000\u0000\u0000#y\u0001\u0000\u0000\u0000%{\u0001\u0000\u0000"+
		"\u0000\'}\u0001\u0000\u0000\u0000)\u0080\u0001\u0000\u0000\u0000+\u0083"+
		"\u0001\u0000\u0000\u0000-\u0086\u0001\u0000\u0000\u0000/\u0089\u0001\u0000"+
		"\u0000\u00001\u008b\u0001\u0000\u0000\u00003\u0097\u0001\u0000\u0000\u0000"+
		"5\u009a\u0001\u0000\u0000\u00007\u009f\u0001\u0000\u0000\u00009\u00a6"+
		"\u0001\u0000\u0000\u0000;\u00ab\u0001\u0000\u0000\u0000=\u00af\u0001\u0000"+
		"\u0000\u0000?\u00b3\u0001\u0000\u0000\u0000A\u00b5\u0001\u0000\u0000\u0000"+
		"C\u00bd\u0001\u0000\u0000\u0000E\u00cc\u0001\u0000\u0000\u0000G\u00d5"+
		"\u0001\u0000\u0000\u0000I\u00da\u0001\u0000\u0000\u0000K\u00e0\u0001\u0000"+
		"\u0000\u0000M\u00e2\u0001\u0000\u0000\u0000O\u00e7\u0001\u0000\u0000\u0000"+
		"Q\u00ed\u0001\u0000\u0000\u0000S\u00ef\u0001\u0000\u0000\u0000UV\u0005"+
		";\u0000\u0000V\u0002\u0001\u0000\u0000\u0000WX\u0005+\u0000\u0000X\u0004"+
		"\u0001\u0000\u0000\u0000YZ\u0005-\u0000\u0000Z\u0006\u0001\u0000\u0000"+
		"\u0000[\\\u0005*\u0000\u0000\\\b\u0001\u0000\u0000\u0000]^\u0005/\u0000"+
		"\u0000^\n\u0001\u0000\u0000\u0000_`\u0005=\u0000\u0000`\f\u0001\u0000"+
		"\u0000\u0000ab\u0005#\u0000\u0000b\u000e\u0001\u0000\u0000\u0000cd\u0005"+
		"$\u0000\u0000d\u0010\u0001\u0000\u0000\u0000ef\u0005:\u0000\u0000f\u0012"+
		"\u0001\u0000\u0000\u0000gh\u0005&\u0000\u0000h\u0014\u0001\u0000\u0000"+
		"\u0000ij\u0005,\u0000\u0000j\u0016\u0001\u0000\u0000\u0000kl\u0005(\u0000"+
		"\u0000l\u0018\u0001\u0000\u0000\u0000mn\u0005)\u0000\u0000n\u001a\u0001"+
		"\u0000\u0000\u0000op\u0005{\u0000\u0000p\u001c\u0001\u0000\u0000\u0000"+
		"qr\u0005}\u0000\u0000r\u001e\u0001\u0000\u0000\u0000st\u0005=\u0000\u0000"+
		"tu\u0005=\u0000\u0000u \u0001\u0000\u0000\u0000vw\u0005!\u0000\u0000w"+
		"x\u0005=\u0000\u0000x\"\u0001\u0000\u0000\u0000yz\u0005>\u0000\u0000z"+
		"$\u0001\u0000\u0000\u0000{|\u0005<\u0000\u0000|&\u0001\u0000\u0000\u0000"+
		"}~\u0005>\u0000\u0000~\u007f\u0005=\u0000\u0000\u007f(\u0001\u0000\u0000"+
		"\u0000\u0080\u0081\u0005<\u0000\u0000\u0081\u0082\u0005=\u0000\u0000\u0082"+
		"*\u0001\u0000\u0000\u0000\u0083\u0084\u0005&\u0000\u0000\u0084\u0085\u0005"+
		"&\u0000\u0000\u0085,\u0001\u0000\u0000\u0000\u0086\u0087\u0005|\u0000"+
		"\u0000\u0087\u0088\u0005|\u0000\u0000\u0088.\u0001\u0000\u0000\u0000\u0089"+
		"\u008a\u0005!\u0000\u0000\u008a0\u0001\u0000\u0000\u0000\u008b\u008c\u0005"+
		"p\u0000\u0000\u008c\u008d\u0005r\u0000\u0000\u008d\u008e\u0005i\u0000"+
		"\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0090\u0005t\u0000\u0000\u0090"+
		"\u0091\u0005P\u0000\u0000\u0091\u0092\u0005l\u0000\u0000\u0092\u0093\u0005"+
		"e\u0000\u0000\u0093\u0094\u0005a\u0000\u0000\u0094\u0095\u0005s\u0000"+
		"\u0000\u0095\u0096\u0005e\u0000\u0000\u00962\u0001\u0000\u0000\u0000\u0097"+
		"\u0098\u0005i\u0000\u0000\u0098\u0099\u0005f\u0000\u0000\u00994\u0001"+
		"\u0000\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b\u009c\u0005l\u0000"+
		"\u0000\u009c\u009d\u0005s\u0000\u0000\u009d\u009e\u0005e\u0000\u0000\u009e"+
		"6\u0001\u0000\u0000\u0000\u009f\u00a0\u0005e\u0000\u0000\u00a0\u00a1\u0005"+
		"l\u0000\u0000\u00a1\u00a2\u0005s\u0000\u0000\u00a2\u00a3\u0005e\u0000"+
		"\u0000\u00a3\u00a4\u0005i\u0000\u0000\u00a4\u00a5\u0005f\u0000\u0000\u00a5"+
		"8\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005m\u0000\u0000\u00a7\u00a8\u0005"+
		"i\u0000\u0000\u00a8\u00a9\u0005e\u0000\u0000\u00a9\u00aa\u0005n\u0000"+
		"\u0000\u00aa:\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005n\u0000\u0000\u00ac"+
		"\u00ad\u0005u\u0000\u0000\u00ad\u00ae\u0005m\u0000\u0000\u00ae<\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0005v\u0000\u0000\u00b0\u00b1\u0005u\u0000"+
		"\u0000\u00b1\u00b2\u0005l\u0000\u0000\u00b2>\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0005v\u0000\u0000\u00b4@\u0001\u0000\u0000\u0000\u00b5\u00b9\u0007"+
		"\u0000\u0000\u0000\u00b6\u00b8\u0007\u0001\u0000\u0000\u00b7\u00b6\u0001"+
		"\u0000\u0000\u0000\u00b8\u00bb\u0001\u0000\u0000\u0000\u00b9\u00b7\u0001"+
		"\u0000\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00baB\u0001\u0000"+
		"\u0000\u0000\u00bb\u00b9\u0001\u0000\u0000\u0000\u00bc\u00be\u0005-\u0000"+
		"\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000\u0000"+
		"\u0000\u00be\u00c0\u0001\u0000\u0000\u0000\u00bf\u00c1\u0003Q(\u0000\u00c0"+
		"\u00bf\u0001\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2"+
		"\u00c0\u0001\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3"+
		"\u00ca\u0001\u0000\u0000\u0000\u00c4\u00c6\u0005.\u0000\u0000\u00c5\u00c7"+
		"\u0003Q(\u0000\u00c6\u00c5\u0001\u0000\u0000\u0000\u00c7\u00c8\u0001\u0000"+
		"\u0000\u0000\u00c8\u00c6\u0001\u0000\u0000\u0000\u00c8\u00c9\u0001\u0000"+
		"\u0000\u0000\u00c9\u00cb\u0001\u0000\u0000\u0000\u00ca\u00c4\u0001\u0000"+
		"\u0000\u0000\u00ca\u00cb\u0001\u0000\u0000\u0000\u00cbD\u0001\u0000\u0000"+
		"\u0000\u00cc\u00d0\u0005\"\u0000\u0000\u00cd\u00cf\t\u0000\u0000\u0000"+
		"\u00ce\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d2\u0001\u0000\u0000\u0000"+
		"\u00d0\u00d1\u0001\u0000\u0000\u0000\u00d0\u00ce\u0001\u0000\u0000\u0000"+
		"\u00d1\u00d3\u0001\u0000\u0000\u0000\u00d2\u00d0\u0001\u0000\u0000\u0000"+
		"\u00d3\u00d4\u0005\"\u0000\u0000\u00d4F\u0001\u0000\u0000\u0000\u00d5"+
		"\u00d6\u0005\'\u0000\u0000\u00d6\u00d7\t\u0000\u0000\u0000\u00d7\u00d8"+
		"\u0005\'\u0000\u0000\u00d8H\u0001\u0000\u0000\u0000\u00d9\u00db\u0007"+
		"\u0002\u0000\u0000\u00da\u00d9\u0001\u0000\u0000\u0000\u00db\u00dc\u0001"+
		"\u0000\u0000\u0000\u00dc\u00da\u0001\u0000\u0000\u0000\u00dc\u00dd\u0001"+
		"\u0000\u0000\u0000\u00dd\u00de\u0001\u0000\u0000\u0000\u00de\u00df\u0006"+
		"$\u0000\u0000\u00dfJ\u0001\u0000\u0000\u0000\u00e0\u00e1\u0005\n\u0000"+
		"\u0000\u00e1L\u0001\u0000\u0000\u0000\u00e2\u00e3\u0005t\u0000\u0000\u00e3"+
		"\u00e4\u0005r\u0000\u0000\u00e4\u00e5\u0005u\u0000\u0000\u00e5\u00e6\u0005"+
		"e\u0000\u0000\u00e6N\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005f\u0000"+
		"\u0000\u00e8\u00e9\u0005a\u0000\u0000\u00e9\u00ea\u0005l\u0000\u0000\u00ea"+
		"\u00eb\u0005s\u0000\u0000\u00eb\u00ec\u0005e\u0000\u0000\u00ecP\u0001"+
		"\u0000\u0000\u0000\u00ed\u00ee\u0007\u0003\u0000\u0000\u00eeR\u0001\u0000"+
		"\u0000\u0000\u00ef\u00f0\u0005%\u0000\u0000\u00f0T\u0001\u0000\u0000\u0000"+
		"\b\u0000\u00b9\u00bd\u00c2\u00c8\u00ca\u00d0\u00dc\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}